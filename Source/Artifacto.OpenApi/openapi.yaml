openapi: "3.0.0"
info:
  title: "Artifacto API"
  version: "1.0.0"
  description: "API for managing projects and artifacts in Artifacto."
paths:
  # ==================
  # MARK: ALL PROJECTS
  # ==================
  /projects:

    # ----- Get all projects.
    get:
      operationId: GetProjects
      tags:
        - Projects
      summary: "List all projects"
      description: "Retrieves a list of all projects."
      responses:
        # Success: Returns a list of all projects.
        "200":
          description: "List of projects retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectsGetResponse"
        # Error: Internal server error.
        "500":
          description: "Internal server error."

    # ------ Post new project.
    post:
      operationId: PostProject
      tags:
        - Projects
      summary: "Create a new project"
      description: "Creates a new project with the provided details."
      requestBody:
        description: "Project to create"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectPostRequest"
      responses:
        # Success: Project created.
        "201":
          description: "Project created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPostResponse"
        
        # Error: Invalid input data for project creation.
        "400":
          description: "Invalid input."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        # Error: Internal server error.
        "500":
          description: "Internal server error."

  # =============
  # MARK: PROJECT
  # =============
  /projects/{projectKey}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
    
    # ----- Get project.
    get:
      operationId: GetProject
      tags:
        - Projects
      summary: "Get project details"
      description: "Retrieves project details by projectId."
      responses:
        # Success: Returns project details.
        "200":
          description: "Project details retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGetResponse"

        # Error: Project not found.
        "404":
          description: "Project not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        # Error: Internal server error.
        "500":
          description: "Internal server error."
    # ----- Update project.
    put:
      operationId: PutProject
      tags:
        - Projects
      summary: "Update a project"
      description: "Updates an existing project's details."
      requestBody:
        required: true
        description: "Updated project information"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectPutRequest"
      responses:
        # Success: Project updated.
        "200":
          description: "Project updated successfully."
        # Error: Invalid input data for update.
        "400":
          description: "Invalid input."
        # Error: Project not found.
        "404":
          description: "Project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
    # ----- Delete project.
    delete:
      operationId: DeleteProject
      tags:
        - Projects
      summary: "Delete a project"
      description: "Deletes a project by projectId."
      responses:
        # Success: Project deleted.
        "204":
          description: "Project deleted successfully."
        # Error: Project not found.
        "404":
          description: "Project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
          
  # ============================
  # MARK: PROJECT ARTIFACTS LIST
  # ============================
  /projects/{projectId}/artifacts:
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    # ----- Get all artifacts for a project.
    get:
      operationId: GetProjectArtifacts
      tags:
        - Artifacts
      summary: "List artifacts in a project"
      description: "Retrieves a list of artifacts for the given project."
      responses:
        # Success: Returns list of artifacts for the project.
        "200":
          description: "List of artifacts retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectArtifactsGetResponse"
        # Error: Project not found.
        "404":
          description: "Project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
  # ===========================
  # MARK: ARTIFACT (BY VERSION)
  # ===========================
  /projects/{projectKey}/artifacts/{artifactVersion}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
      - name: artifactVersion
        in: path
        required: true
        schema:
          type: string
    # ----- Get artifact details.
    get:
      operationId: GetArtifact
      tags:
        - Artifacts
      summary: "Get artifact details"
      description: "Retrieves details of a specific artifact."
      responses:
        # Success: Returns artifact details.
        "200":
          description: "Artifact details retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactGetResponse"
        # Error: Artifact or project not found.
        "404":
          description: "Artifact or project not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        # Error: Internal server error.
        "500":
          description: "Internal server error."
    # ----- Update artifact.
    put:
      operationId: PutArtifact
      tags:
        - Artifacts
      summary: "Update an artifact"
      description: "Updates an existing artifact's details."
      requestBody:
        required: true
        description: "Updated artifact data"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArtifactPutRequest"
      responses:
        # Success: Artifact updated.
        "204":
          description: "Artifact updated successfully."
        # Error: Invalid input data for artifact update.
        "400":
          description: "Invalid input."
        # Error: Artifact or project not found.
        "404":
          description: "Artifact or project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
    # ----- Delete artifact.
    delete:
      operationId: DeleteArtifact
      tags:
        - Artifacts
      summary: "Delete an artifact"
      description: "Deletes a specific artifact from a project."
      responses:
        # Success: Artifact deleted.
        "204":
          description: "Artifact deleted successfully."
        # Error: Artifact or project not found.
        "404":
          description: "Artifact or project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
    # ----- Upload new artifact version.
    post:
      operationId: PostArtifact
      tags:
        - Artifacts
      summary: "Upload a new artifact"
      description: "Uploads a new artifact for a specific project."
      requestBody:
        required: true
        description: "Artifact upload data"
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ArtifactPostRequest"
      responses:
        # Success: Artifact uploaded.
        "201":
          description: "Artifact uploaded successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactPostResponse"
        # Error: Invalid input data for artifact upload.
        "400":
          description: "Invalid input."
        # Error: Project not found.
        "404":
          description: "Project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
  # =======================
  # MARK: ARTIFACT DOWNLOAD
  # =======================
  /projects/{projectKey}/artifacts/{artifactVersion}/download:
    # ----- Download artifact binary.
    get:
      operationId: DownloadArtifact
      tags:
        - Artifacts
      summary: "Download an artifact"
      description: "Retrieves the binary content of the specified artifact."
      parameters:
        - name: projectKey
          in: path
          required: true
          schema:
            type: string
        - name: artifactVersion
          in: path
          required: true
          schema:
            type: string
      responses:
        # Success: Artifact binary downloaded.
        "200":
          description: "Artifact downloaded successfully."
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        # Error: Artifact or project not found.
        "404":
          description: "Artifact or project not found."
        # Error: Internal server error.
        "500":
          description: "Internal server error."
components:
  schemas:
    # ====================
    # MARK: ERROR RESPONSE
    # ====================
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: "Error message."
      description: "Error response details."

    # ===========================
    # MARK: PROJECT LIST RESPONSE
    # ===========================
    ProjectsGetResponse:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        artifactCount:
          type: integer
          format: int32
          description: "Number of artifacts in this project."
        latestStableVersion:
          type: string
          nullable: true
          description: "Latest stable (non-prerelease) version of artifacts in this project."
        latestVersion:
          type: string
          nullable: true
          description: "Latest version (including prerelease) of artifacts in this project."
        latestStableVersionUploadDate:
          type: string
          format: date-time
          nullable: true
          description: "Upload date of the latest stable version, if available."
        latestVersionUploadDate:
          type: string
          format: date-time
          nullable: true
          description: "Upload date of the latest version, if available."
      description: "Project details for listing projects."

    # ============================
    # MARK: PROJECT CREATE REQUEST
    # ============================
    ProjectPostRequest:
      type: object
      properties:
        key:
          type: string
          pattern: "^[a-z0-9]+(-?[a-z0-9]+)*$"
          description: "Unique project identifier."
        name:
          type: string
          nullable: true
          description: "Human-readable project name."
        description:
          type: string
          nullable: true
          description: "Project description."
      required:
        - key

    # ==========================
    # MARK: PROJECT GET RESPONSE
    # ==========================
    ProjectGetResponse:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        latestStableVersion:
          type: string
          nullable: true
          description: "Latest stable (non-prerelease) version of artifacts in this project."
        latestVersion:
          type: string
          nullable: true
          description: "Latest version (including prerelease) of artifacts in this project."
        latestStableVersionUploadDate:
          type: string
          format: date-time
          nullable: true
          description: "Upload date of the latest stable version, if available."
        latestVersionUploadDate:
          type: string
          format: date-time
          nullable: true
          description: "Upload date of the latest version, if available."
      description: "Response with project details."

    # ============================
    # MARK: PROJECT UPDATE REQUEST
    # ============================
    ProjectPutRequest:
      type: object
      properties:
        key:
          type: string
          pattern: "^[a-z0-9]+(-?[a-z0-9]+)*$"
          description: "Unique project identifier."
        name:
          type: string
          nullable: true
          description: "Human-readable project name."
        description:
          type: string
          nullable: true
          description: "Project description."
      required:
        - key

    # ============================
    # MARK: ARTIFACT LIST RESPONSE
    # ============================
    ProjectArtifactsGetResponse:
      type: object
      properties:
        projectKey:
          type: string
        version:
          type: string
        timestamp:
          type: string
          format: date-time
          description: "Timestamp of creation or last modification."
        fileName:
          type: string
          description: "Name of the artifact file."
        fileSizeBytes:
          type: integer
          format: int64
          description: "Size of the artifact file in bytes."
        sha256Hash:
          type: string
          description: "SHA256 hash of the artifact file."
        retained:
          type: boolean
        locked:
          type: boolean
      description: "Artifact details for listing artifacts."

    # =============================
    # MARK: ARTIFACT UPLOAD REQUEST
    # =============================
    ArtifactPostRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: "The artifact file to upload."
      required:
        - file

    # ===========================
    # MARK: ARTIFACT GET RESPONSE
    # ===========================
    ArtifactGetResponse:
      type: object
      properties:
        projectKey:
          type: string
        version:
          type: string
        timestamp:
          type: string
          format: date-time
          description: "Artifact timestamp."
        fileName:
          type: string
          description: "Name of the uploaded artifact file."
        fileSizeBytes:
          type: integer
          format: int64
          description: "Size of the uploaded artifact file in bytes."
        sha256Hash:
          type: string
          description: "SHA256 hash of the artifact file."
        retained:
          type: boolean
        locked:
          type: boolean
      description: "Response with artifact details."

    # =============================
    # MARK: ARTIFACT UPDATE REQUEST
    # =============================
    ArtifactPutRequest:
      type: object
      properties:
        version:
          type: string
          description: "Artifact version identifier."
        retained:
          type: boolean
          default: false
          description: "If the artifact should be retained indefinitely."
        locked:
          type: boolean
          default: false
          description: "If the artifact is locked for modifications."
      required:
        - version

    # ============================
    # MARK: PROJECT CREATE RESPONSE
    # ============================
    ProjectPostResponse:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      description: "Response when a project is created."

    # ==============================
    # MARK: ARTIFACT UPLOAD RESPONSE
    # ==============================
    ArtifactPostResponse:
      type: object
      properties:
        projectKey:
          type: string
        version:
          type: string
        timestamp:
          type: string
          format: date-time
          description: "Artifact timestamp."
        fileName:
          type: string
          description: "Name of the uploaded artifact file."
        fileSizeBytes:
          type: integer
          format: int64
          description: "Size of the uploaded artifact file in bytes."
        sha256Hash:
          type: string
          description: "SHA256 hash of the artifact file."
        retained:
          type: boolean
        locked:
          type: boolean
      description: "Response when an artifact is uploaded."
